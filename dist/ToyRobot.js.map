{"version":3,"sources":["../src/ToyRobot.js"],"names":["ToyRobot","constructor","tabletop","TableTop","x","y","facing","setFacing","Error","toUpperCase","place","f","checkOutOfBound","move","nextX","nextY","newX","newY","left","degree","right","report","X","Y","F"],"mappings":"gLAAA,4DACA,0CAEA,KAAMA,CAAAA,QAAS,CACX;;OAGAC,WAAW,EAAI,CACX,KAAKC,QAAL,CAAgB,GAAIC,kBAAJ,EAAhB,CACA,KAAKC,CAAL,CAAS,IAAT,CACA,KAAKC,CAAL,CAAS,IAAT,CACA,KAAKC,MAAL,CAAc,IAAd,CACH,CAED;;OAGAC,SAAS,CAAED,MAAF,CAAU,CACf,GAAI,MAAOA,CAAAA,MAAP,GAAkB,QAAtB,CAAgC,CAC5B,KAAM,IAAIE,CAAAA,KAAJ,CAAU,gCAAV,CAAN,CACH,CACDF,MAAM,CAAGA,MAAM,CAACG,WAAP,EAAT,CACA,GAAI,CAAC,yBAAQH,MAAR,CAAL,CAAsB,CAClB,KAAME,CAAAA,KAAK,CAAC,mCAAqCF,MAAtC,CAAX,CACH,CACD,KAAKA,MAAL,CAAcA,MAAd,CACH,CAED;;OAGAI,KAAK,CAAEN,CAAF,CAAKC,CAAL,CAAQM,CAAR,CAAW,CACZ,GAAI,KAAKT,QAAL,CAAcU,eAAd,CAA8BR,CAA9B,CAAiCC,CAAjC,CAAJ,CAAyC,CACrC,KAAM,IAAIG,CAAAA,KAAJ,CAAUJ,CAAC,CAAG,GAAJ,CAAUC,CAAV,CAAc,+BAAxB,CAAN,CACH,CAFD,IAEO,CACH,KAAKE,SAAL,CAAeI,CAAf,EACA,KAAKP,CAAL,CAASA,CAAT,CACA,KAAKC,CAAL,CAASA,CAAT,CACA,MAAO,KAAP,CACH,CACJ,CAED;;OAGAQ,IAAI,EAAI,CACJ,GAAI,CAACC,KAAD,CAAQC,KAAR,EAAiB,iCAAgB,KAAKT,MAArB,CAArB,CACA,GAAIU,CAAAA,IAAI,CAAG,KAAKZ,CAAL,CAASU,KAApB,CACA,GAAIG,CAAAA,IAAI,CAAG,KAAKZ,CAAL,CAASU,KAApB,CAEA,GAAI,KAAKb,QAAL,CAAcU,eAAd,CAA8BI,IAA9B,CAAoCC,IAApC,CAAJ,CAA+C,CAC3C,MAAO,MAAP,CACH,CAFD,IAEO,CACH,KAAKb,CAAL,CAASY,IAAT,CACA,KAAKX,CAAL,CAASY,IAAT,CACA,MAAO,KAAP,CACH,CACJ,CAED;;OAGAC,IAAI,EAAI,CACJ,GAAI,CAAC,KAAKZ,MAAV,CAAkB,MAAO,MAAP,CAElB,GAAIa,CAAAA,MAAM,CAAG,iCAAgB,KAAKb,MAArB,CAAb,CACAa,MAAM,EAAI,EAAV,CACA,KAAKb,MAAL,CAAc,kCAAiBa,MAAjB,CAAd,CACA,MAAO,KAAP,CACH,CAED;;OAGAC,KAAK,EAAI,CACL,GAAI,CAAC,KAAKd,MAAV,CAAkB,MAAO,MAAP,CAElB,GAAIa,CAAAA,MAAM,CAAG,iCAAgB,KAAKb,MAArB,CAAb,CACAa,MAAM,EAAI,EAAV,CACA,KAAKb,MAAL,CAAc,kCAAiBa,MAAjB,CAAd,CACA,MAAO,KAAP,CACH,CAED;;OAGAE,MAAM,EAAI,CACN,MAAO,CACHC,CAAC,CAAE,KAAKlB,CADL,CAEHmB,CAAC,CAAE,KAAKlB,CAFL,CAGHmB,CAAC,CAAE,KAAKlB,MAHL,CAAP,CAKH,CAzFU,C,aA4FAN,Q","sourcesContent":["import TableTop from \"./TableTop\";\nimport { isValid, getFacingOptions, getFacingDegree, getFacingMoment } from \"./FacingUtils\";\n\nclass ToyRobot {\n    /*\n     * Initializing ToyRobot\n     */\n    constructor () {\n        this.tabletop = new TableTop();\n        this.x = null;\n        this.y = null;\n        this.facing = null;\n    }\n\n    /*\n     * Set facing of robot\n     */\n    setFacing (facing) {\n        if (typeof facing !== \"string\") {\n            throw new Error(\"Invalid facing parameter type!\");\n        }\n        facing = facing.toUpperCase();\n        if (!isValid(facing)) {\n            throw Error(\"Invalid facing parameter value: \" + facing);\n        }\n        this.facing = facing;\n    }\n\n    /*\n     * Put the toy robot on the table in position X,Y and facing NORTH, SOUTH, EAST or WEST\n     */\n    place (x, y, f) {\n        if (this.tabletop.checkOutOfBound(x, y)) {\n            throw new Error(x + \",\" + y + \" is out of tabletop boundary!\");\n        } else {\n            this.setFacing(f);\n            this.x = x;\n            this.y = y;\n            return true;\n        }\n    }\n\n    /*\n     * Move the toy robot one unit forward in the direction it is currently facing\n     */\n    move () {\n        let [nextX, nextY] = getFacingMoment(this.facing);\n        let newX = this.x + nextX;\n        let newY = this.y + nextY;\n\n        if (this.tabletop.checkOutOfBound(newX, newY)) {\n            return false;\n        } else {\n            this.x = newX;\n            this.y = newY;\n            return true;\n        }\n    }\n\n    /*\n     * Rotate the robot 90 degrees anti-clock wise\n     */\n    left () {\n        if (!this.facing) return false;\n\n        let degree = getFacingDegree(this.facing);\n        degree -= 90;\n        this.facing = getFacingOptions(degree);\n        return true;\n    }\n\n    /*\n     * Rotate the robot 90 degrees clock wise\n     */\n    right () {\n        if (!this.facing) return false;\n\n        let degree = getFacingDegree(this.facing);\n        degree += 90;\n        this.facing = getFacingOptions(degree);\n        return true;\n    }\n\n    /*\n     * Announce the X,Y and F of the robot\n     */\n    report () {\n        return {\n            X: this.x,\n            Y: this.y,\n            F: this.facing\n        };\n    }\n}\n\nexport default ToyRobot;\n"],"file":"ToyRobot.js"}